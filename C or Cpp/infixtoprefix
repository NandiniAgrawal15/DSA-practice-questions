#include<iostream>
#include<stack>
using namespace std;
int prec(char c)
{
    if(c=='^')
    {
        return 3;
    }
    else if(c=='*'||c=='/')
    {
        return 2;
    }
    else if(c=='+'||c=='-')
    {
        return 1;
    }
    else 
    {
        return -1;
    }
}
string infixToPrefix(string s)
{
    string rev="";
    stack<char>st;
    int i;
    for(i=0;i<s.length();i++)
    {
        if((s[i]>='a' && s[i]<='z')||(s[i]>='A' && s[i]<='Z'))
        {
            rev+=s[i];
        }
        else if(s[i]=='(')
        {
            st.push(s[i]);
        }
        else if(s[i]==')')
        {
            while(!st.empty() && st.top()!='(')
            {
                rev+=st.top();st.pop();
            }
           if(!st.empty())
            {
                st.pop();
            }
        }
        else 
        {
            while(!st.empty() && prec(st.top())>prec(s[i]))
            {
                rev+=st.top();
                st.pop();
            }
            st.push(s[i]);
        }
    }
    while(!st.empty())
    {
        rev+=st.top();st.pop();
    }
    return rev;
}
int main()
{
    string s="(a-b/c)*(a/k-l)";
    string m=infixToPrefix(s);
    cout<<m;
    return 0;
}
